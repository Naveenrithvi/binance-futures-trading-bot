import { CandleChartInterval } from 'binance-api-node';
import { tickExitStrategy } from '../strategies/exit';
import { Complex } from '../strategies/entry';
import { getPositionSizeByRisk } from '../strategies/riskManagement';

export const hyperParameters = {
  adxLength: { value: 33 },
  adxThreshold: { value: 12 },
  supportResistanceLeftBars: { value: 7 },
  supportResistanceRightBars: { value: 8 },
  volumeMultiplier: { value: 1.2 },
  volumeLength: { value: 24 },
  psarStep: { value: 0.2 },
  psarMax: { value: 0.1 },
  rangeFilterSourceType: { value: 'close' },
  rangeFilterPeriod: { value: 8 },
  rangeFilterMultiplier: { value: 1.4 },
  macdFastLength: { value: 15 },
  macdSlowLength: { value: 17 },
  macdSourceType: { value: 'open' },
  macdSignalLength: { value: 20 },
  rsiLength: { value: 55 },
  rsiSourceType: { value: 'low' },
  momentumLength: { value: 10 },
  momentumTmoLength: { value: 3 },
  momentumSmoothLength: { value: 21 },
  maLength: { value: 17 },
  maSourceType: { value: 'open' },
  jmaLength: { value: 14 },
  jmaSourceType: { value: 'low' },
  emaScalpingLength: { value: 3 },
  scalpingFastEmaLength: { value: 10 },
  scalpingMediumEmaLength: { value: 120 },
  scalpingSlowEmaLength: { value: 250 },
  scalpingLookBack: { value: 12 },
  scalpingUseHeikinAshiCandles: { value: true },
  rmiLength: { value: 13 },
  rmiSourceType: { value: 'close' },
  rmiMomentumLength: { value: 15 },
  rmiOversold: { value: 44 },
  rmiOverbought: { value: 62 },
  bollingerBandsLength: { value: 9 },
  bollingerBandsSourceType: { value: 'high' },
  bollingerBandsMultiplier: { value: 2 },
  tpLongPercent: { value: 0.009 },
  tpShortPercent: { value: 0.009 },
  slPercent: { value: 0.055 },
};

export const config: AbstractStrategyConfig = (parameters) => [
  {
    asset: 'BTC',
    base: 'USDT',
    loopInterval: CandleChartInterval.ONE_HOUR,
    indicatorIntervals: [CandleChartInterval.ONE_HOUR],
    risk: 0.055,
    leverage: 10,
    unidirectional: false,
    canOpenNewPositionToCloseLast: true,
    exitStrategy: (price, candles, pricePrecision, side, exchangeInfo) =>
      tickExitStrategy(
        price,
        candles[CandleChartInterval.ONE_HOUR],
        pricePrecision,
        side,
        exchangeInfo,
        {
          lossTolerance: parameters.slPercent.value,
          profitTargets: [
            {
              quantityPercentage: 1,
              deltaPercentage: parameters.tpLongPercent.value,
            },
          ],
        }
      ),
    buyStrategy: (candles) =>
      Complex.BITCOIN_SNIPER_V1.isBuySignal(
        candles[CandleChartInterval.ONE_HOUR],
        {
          adxLength: parameters.adxLength.value,
          adxThreshold: parameters.adxThreshold.value,
          supportResistanceLeftBars: parameters.supportResistanceLeftBars.value,
          supportResistanceRightBars:
            parameters.supportResistanceRightBars.value,
          volumeMultiplier: parameters.volumeMultiplier.value,
          volumeLength: parameters.volumeLength.value,
          psarStep: parameters.psarStep.value,
          psarMax: parameters.psarMax.value,
          rangeFilterSourceType: parameters.rangeFilterSourceType.value,
          rangeFilterPeriod: parameters.rangeFilterPeriod.value,
          rangeFilterMultiplier: parameters.rangeFilterMultiplier.value,
          macdFastLength: parameters.macdFastLength.value,
          macdSlowLength: parameters.macdSlowLength.value,
          macdSourceType: parameters.macdSourceType.value,
          macdSignalLength: parameters.macdSignalLength.value.value,
          rsiLength: parameters.rsiLength.value,
          rsiSourceType: parameters.rsiSourceType.value,
          momentumLength: parameters.momentumLength.value,
          momentumTmoLength: parameters.momentumTmoLength.value,
          momentumSmoothLength: parameters.momentumSmoothLength.value,
          maLength: parameters.maLength.value,
          maSourceType: parameters.maSourceType.value,
          jmaLength: parameters.jmaLength.value,
          jmaSourceType: parameters.jmaSourceType.value,
          emaScalpingLength: parameters.emaScalpingLength.value,
          scalpingFastEmaLength: parameters.scalpingFastEmaLength.value,
          scalpingMediumEmaLength: parameters.scalpingMediumEmaLength.value,
          scalpingSlowEmaLength: parameters.scalpingSlowEmaLength.value,
          scalpingLookBack: parameters.scalpingLookBack.value,
          scalpingUseHeikinAshiCandles:
            parameters.scalpingUseHeikinAshiCandles.value,
          rmiLength: parameters.rmiLength.value,
          rmiSourceType: parameters.rmiSourceType.value,
          rmiMomentumLength: parameters.rmiMomentumLength.value,
          rmiOversold: parameters.rmiOversold.value,
          rmiOverbought: parameters.rmiOverbought.value,
          bollingerBandsLength: parameters.bollingerBandsLength.value,
          bollingerBandsSourceType: parameters.bollingerBandsSourceType.value,
          bollingerBandsMultiplier: parameters.bollingerBandsMultiplier.value,
        }
      ),
    sellStrategy: (candles) =>
      Complex.BITCOIN_SNIPER_V1.isSellSignal(
        candles[CandleChartInterval.ONE_HOUR],
        {
          adxLength: parameters.adxLength.value,
          adxThreshold: parameters.adxThreshold.value,
          supportResistanceLeftBars: parameters.supportResistanceLeftBars.value,
          supportResistanceRightBars:
            parameters.supportResistanceRightBars.value,
          volumeMultiplier: parameters.volumeMultiplier.value,
          volumeLength: parameters.volumeLength.value,
          psarStep: parameters.psarStep.value,
          psarMax: parameters.psarMax.value,
          rangeFilterSourceType: parameters.rangeFilterSourceType.value,
          rangeFilterPeriod: parameters.rangeFilterPeriod.value,
          rangeFilterMultiplier: parameters.rangeFilterMultiplier.value,
          macdFastLength: parameters.macdFastLength.value,
          macdSlowLength: parameters.macdSlowLength.value,
          macdSourceType: parameters.macdSourceType.value,
          macdSignalLength: parameters.macdSignalLength.value.value,
          rsiLength: parameters.rsiLength.value,
          rsiSourceType: parameters.rsiSourceType.value,
          momentumLength: parameters.momentumLength.value,
          momentumTmoLength: parameters.momentumTmoLength.value,
          momentumSmoothLength: parameters.momentumSmoothLength.value,
          maLength: parameters.maLength.value,
          maSourceType: parameters.maSourceType.value,
          jmaLength: parameters.jmaLength.value,
          jmaSourceType: parameters.jmaSourceType.value,
          emaScalpingLength: parameters.emaScalpingLength.value,
          scalpingFastEmaLength: parameters.scalpingFastEmaLength.value,
          scalpingMediumEmaLength: parameters.scalpingMediumEmaLength.value,
          scalpingSlowEmaLength: parameters.scalpingSlowEmaLength.value,
          scalpingLookBack: parameters.scalpingLookBack.value,
          scalpingUseHeikinAshiCandles:
            parameters.scalpingUseHeikinAshiCandles.value,
          rmiLength: parameters.rmiLength.value,
          rmiSourceType: parameters.rmiSourceType.value,
          rmiMomentumLength: parameters.rmiMomentumLength.value,
          rmiOversold: parameters.rmiOversold.value,
          rmiOverbought: parameters.rmiOverbought.value,
          bollingerBandsLength: parameters.bollingerBandsLength.value,
          bollingerBandsSourceType: parameters.bollingerBandsSourceType.value,
          bollingerBandsMultiplier: parameters.bollingerBandsMultiplier.value,
        }
      ),
    riskManagement: getPositionSizeByRisk,
  },
];
